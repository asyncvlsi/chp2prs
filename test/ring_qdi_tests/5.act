
defproc merge (chan?(int<1>) l1; chan?(int<8>) l2, l3; chan!(int<8>) r)
{
	int<1> c;
	int<8> x, x1, x2;
	chp{
		*[
		l1?c; [c=0 -> l2?x []c=1 -> l3?x]; r!x
		]
	}
}

defproc src5 (chan!(int<8>) r)
{
	chp{
		*[r!5]
	}
}

defproc src2 (chan!(int<8>) r)
{
	chp{
		*[r!2]
	}
}

defproc src_c (chan!(int<1>) r)
{
	chp{
		*[r!0]
	}
}

defproc snk (chan?(int<8>) l)
{
	int<8> x;
	chp{
		*[l?x; log("%d", x)]
	}
}

defproc testproc (chan?(int<1>) C; chan?(int<8>) X1, X2; chan!(int<8>) Y)
{
  merge m(C,X1,X2,Y);

  src_c ic(C);
  src5  ix1(X1);
  src2  ix2(X2);

  snk o(Y);
}
