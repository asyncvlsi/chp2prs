/*************************************************************************
 *
 *  Copyright (c) 2024 Ole Richter - Yale University
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA  02110-1301, USA.
 *
 **************************************************************************
 */
import globals;
import "syn/ditest/stdcells_orgfixme.act"; // @TODO this is only a workarround it should be imported from diopt, with proper namespace handeling.


namespace syn {
  //export namespace ditest {
      export defproc timingtest (sdtexprchan?<1> in; sdtexprchan!<1> out){
          // not cmos compatible only for timing tests
          out.r = in.r; // its assumed that all r are shorted
          prs {
              in.d.d[0].f => out.d.d[0].f+
              in.d.d[0].t => out.d.d[0].t+
              
          }
      }

      export template<pint N>
    defproc copy(sdtexprchan<1> in; sdtexprchan<1> out[N]) {
      ( i : N:
        in = out[i];
      )
    }

    export
    defproc source_GND(sdtexprchan<1> out) {
      timingtest bout(.out=out);
      syndioptsource_GND inst(.out=bout.in);
    }

    export
    defproc source_Vdd(sdtexprchan<1> out) {
      timingtest bout(.out=out);
      syndioptsource_Vdd inst(.out=bout.in);
    }

    /*-- inverters --*/

    export template<pint N>
    defproc inv(sdtexprchan?<1> A; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bY(.out=Y);
      syndioptinv<N> inst(.A=bA.out,.Y=bY.in);
    }

    export defproc INVX1 <: inv<1> () {}
    export defproc INVX2 <: inv<2> () {}
    export defproc INVX4 <: inv<4> () {}
    export defproc INVX8 <: inv<8> () {}

    /*--  signal buffers --*/

    export template<pint N>
    defproc buf(sdtexprchan?<1> A; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bY(.out=Y);
      syndioptbuf<N> inst(.A=bA.out,.Y=bY.in);
    }

    export defproc BUFX1 <: buf<1> () {}
    export defproc BUFX2 <: buf<2> () {}
    export defproc BUFX4 <: buf<4> () {}

    /*-- simple gates --*/
    export
    defproc NOR2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptNOR2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc NOR3X1(sdtexprchan?<1> A, B, C; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bY(.out=Y);
      syndioptNOR3X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.Y=bY.in);

    }

    export
    defproc OR2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptOR2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc OR2X2(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptOR2X2 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc NAND2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptNAND2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc NAND3X1(sdtexprchan?<1> A, B, C; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bY(.out=Y);
      syndioptNAND3X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.Y=bY.in);

    }

    export
    defproc AND2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptAND2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc AND2X2(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptAND2X2 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc XOR2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptXOR2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc XNOR2X1(sdtexprchan?<1> A, B; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bY(.out=Y);
      syndioptXNOR2X1 inst(.A=bA.out,.B=bB.out,.Y=bY.in);
    }

    export
    defproc MUX2X1(sdtexprchan?<1> A, B, S; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bS(.in=S);
      timingtest bY(.out=Y);
      syndioptMUX2X1 inst(.A=bA.out,.B=bB.out,.S=bS.out,.Y=bY.in);

    }

    export
    defproc OAI21X1(sdtexprchan?<1> A, B, C; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bY(.out=Y);
      syndioptOAI21X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.Y=bY.in);

    }

    export
    defproc AOI21X1(sdtexprchan?<1> A, B, C; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bY(.out=Y);
      syndioptAOI21X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.Y=bY.in);

    }

    export
    defproc OAI22X1(sdtexprchan?<1> A, B, C, D; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bD(.in=D);
      timingtest bY(.out=Y);
      syndioptOAI22X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.D=bD.out,.Y=bY.in);
    }

    export
    defproc AOI22X1(sdtexprchan?<1> A, B, C, D; sdtexprchan!<1> Y) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bD(.in=D);
      timingtest bY(.out=Y);
      syndioptAOI22X1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.D=bD.out,.Y=bY.in);
    }

    /*--- arithmetic ---*/

    export
    defproc HAX1(sdtexprchan?<1> A, B; sdtexprchan!<1> YC, YS) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bYC(.out=YC);
      timingtest bYS(.out=YS);
      syndioptHAX1 inst(.A=bA.out,.B=bB.out,.YC=bYC.in,.YS=bYS.in);
    }

    export
    defproc FAX1(sdtexprchan?<1> A, B, C; sdtexprchan!<1> YC, YS) {
      timingtest bA(.in=A);
      timingtest bB(.in=B);
      timingtest bC(.in=C);
      timingtest bYC(.out=YC);
      timingtest bYS(.out=YS);
      syndioptFAX1 inst(.A=bA.out,.B=bB.out,.C=bC.out,.YC=bYC.in,.YS=bYS.in);
    }
  //}
}